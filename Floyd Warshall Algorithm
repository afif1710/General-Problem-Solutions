// User function template for C++

class Solution {
  public:
    // Floyd Warshall Algorithm (O(n ^3))
    void floydWarshall(vector<vector<int>> &dist) {
        // Code here
        int int_max = 1e8;
        
        int n = dist.size();
        
        for(int via = 0; via<n; via++){ //Go to destination from source through "via"
            for(int i = 0; i<n; i++){
                for(int j = 0 ; j<n; j++){
                    //Take min of dist[i][j] and total cost to go from dest to src through "via"
                    if (dist[i][via] != int_max && dist[via][j] != int_max) // To make sure we do not add infinite values when the number are high
                        dist[i][j] = min(dist[i][j], dist[i][via] + dist[via][j]);
                }
            }
        }
        
        //No need to return as we just have to change in the vector in place
    }
};
